<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamProject.lostArkProject.teaching.dao.TeachingDAO">

    <resultMap id="mentorMap" type="hashMap">
        <result column="MENTOR_MEMBER_ID" property="mentorMemberId"/>
        <result column="CHARACTER_NICKNAME" property="characterNickname"/>
        <result column="ITEM_LEVEL" property="itemLevel"/>
        <result column="SERVER_NAME" property="serverName"/>
        <result column="MENTOR_CONTENT_ID" property="mentorContentId"/>
        <result column="MENTOR_WANT_TO_SAY" property="mentorWantToSay"/>
    </resultMap>

    <!--새로운 멘토 입력 -->
    <insert id="newMentor" parameterType="MentorDTO">
        INSERT INTO MENTOR(
            MENTOR_MEMBER_ID,
            MENTOR_WANT_TO_SAY,
            MENTOR_DISCORD_ID
            )
        VALUES(
            #{mentorMemberId},
            #{mentorWantToSay},
            #{mentorDiscordId}
        )
    </insert>
    <insert id="insertMentorContent" parameterType="map">
        INSERT INTO MENTOR_CONTENT (
        MENTOR_MEMBER_ID,
        MENTOR_CONTENT_ID
        )
        VALUES (
        #{mentorMemberId},
        #{mentorContentId}
        )
    </insert>


    <!--새로운 멘티 입력 -->
    <insert id="newMentee" parameterType="MenteeDTO">
        INSERT INTO MENTEE(
        MENTEE_WANT_TO_SAY,
        MENTEE_MEMBER_ID,
        MENTEE_CONTENT_ID)
        VALUES(
        #{mentee_want_to_say},
        #{mentee_member_id},
        #{mentee_content_id}
        )
    </insert>

    <select id="getMentorList" parameterType="java.util.HashMap" resultType="hashMap">
        SELECT
        M.MENTOR_MEMBER_ID AS mentorMemberId,
        M.MENTOR_WANT_TO_SAY AS mentorWantToSay
        FROM MENTOR M
    </select>
    <select id="getMentorContent" parameterType="java.util.HashMap" resultType="hashMap">
        SELECT
        M.MENTOR_MEMBER_ID AS mentorMemberId,
        GROUP_CONCAT(MC.MENTOR_CONTENT_ID) AS mentorContentNames
        FROM MENTOR_CONTENT MC
        JOIN MENTOR M ON MC.MENTOR_MEMBER_ID = M.MENTOR_MEMBER_ID
        GROUP BY M.MENTOR_MEMBER_ID
    </select>


    <select id="getMemberCharacter" parameterType="java.util.HashMap" resultType="hashMap">
        SELECT
        C.MEMBER_ID AS mentorMemberId,
        C.CHARACTER_NICKNAME AS characterNickname,
        C.ITEM_LEVEL AS itemLevel,
        C.SERVER_NAME AS serverName
        FROM MEMBER_CHARACTER C
        JOIN MEMBER M
        ON C.CHARACTER_NICKNAME = M.REPRESENTATIVE_CHARACTER_NICKNAME
    </select>

    <select id="findDiscordIdByMentorId" parameterType="string" resultType="string">
        SELECT mentor_discord_id
        FROM MENTOR
        WHERE mentor_member_id = #{mentorMemberId}
    </select>

    <select id="getApplyStatusByMentee" resultType="map">
        SELECT apply_status, mentor_member_id
        FROM MENTEE_APPLY
        WHERE mentee_member_id = #{menteeMemberId}
    </select>

    <!-- 1) 멘티가 멘토에게 신청 INSERT -->
    <insert id="insertMenteeApply" parameterType="MenteeApplyDTO">
        INSERT INTO MENTEE_APPLY (
        mentor_member_id,
        mentee_member_id,
        apply_status
        )
        VALUES (
        #{mentor_member_id},
        #{mentee_member_id},
        'REQUESTED'
        )
    </insert>

    <!-- 2) 멘토가 멘티 신청을 수락(ACCEPTED)으로 UPDATE -->
    <update id="acceptMenteeApply" parameterType="MenteeApplyDTO">
        UPDATE MENTEE_APPLY
        SET apply_status = 'ACCEPTED'
        WHERE mentor_member_id = #{mentor_member_id}
        AND mentee_member_id = #{mentee_member_id}
        AND apply_status = 'REQUESTED'
    </update>

    <!-- 3) 멘토가 멘티 신청을 거절(REJECTED)으로 UPDATE -->
    <update id="rejectMenteeApply" parameterType="MenteeApplyDTO">
        UPDATE MENTEE_APPLY
        SET apply_status = 'REJECTED'
        WHERE mentor_member_id = #{mentor_member_id}
        AND mentee_member_id = #{mentee_member_id}
        AND apply_status = 'REQUESTED'
    </update>

    <!-- 중복확인-->
    <select id="isDuplicateMenteeApply" parameterType="MenteeApplyDTO" resultType="int">
        SELECT COUNT(*)
        FROM MENTEE_APPLY
        WHERE mentor_member_id = #{mentor_member_id}
        AND mentee_member_id = #{mentee_member_id}
    </select>


</mapper>